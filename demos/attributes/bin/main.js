// Generated by Haxe
(function () { "use strict";
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var demos_attributes_Main = function() { };
demos_attributes_Main.main = function() {
};
var hxtag_Tag = function() { };
hxtag_Tag.__super__ = HTMLElement;
hxtag_Tag.prototype = $extend(HTMLElement.prototype,{
});
var demos_attributes_MyTag = function() { };
demos_attributes_MyTag.__super__ = hxtag_Tag;
demos_attributes_MyTag.prototype = $extend(hxtag_Tag.prototype,{
	createdCallback: function() {
		this.innerHTML = "My Tag";
		this.addEventListener("done:changed",$bind(this,this.doneChanged));
		this.setAttribute("done","ok");
	}
	,doneChanged: function() {
		console.log("done:changed");
	}
	,attributeChangedCallback: function(name,old,value) {
		console.log("changed " + name);
	}
});
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
demos_attributes_MyTag.Element = window.document.registerElement("my-tag",{ prototype : demos_attributes_MyTag.prototype});
demos_attributes_Main.main();
})();
